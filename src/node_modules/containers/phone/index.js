import React, {Component} from 'react';
import {connect} from 'react-redux';
import * as R from 'ramda';
import {Link} from 'react-router-dom';

import {fetchPhoneById, addPhoneToBasket} from 'actions';
import {getPhoneById} from 'selectors';
import BasketCart from 'components/basketCart';

class Phone extends Component{
	
	componentDidMount() {
		const phoneId = this.props.match.params.id
		this.props.fetchPhoneById(phoneId);
	}

	renderField(){
		const {phone} = this.props;
		const columnField = R.compose(
				R.toPairs,
				R.pick([
					'cpu',
					'camera',
					'size',
					'weight',
					'display',
					'battery',
					'memory'	
				])
			)(phone);

		return columnField.map(([key,value]) => (
			<div className="column-container" key={key}>
				<div className="details-title">
					<p>{key}</p>
				</div>
				<div className="details-info">
					{value}
				</div>
			</div>
		));
	}

	renderContent(){
		const {phone} = this.props;

		return (
			<div className="thumbnail">
				<div className="row">
					<div className="col-6">
						<img 
							className="img-thumbnail"
							src={phone.image}
							alt={phone.name}
						/>
					</div>
					<div className="col-6">
						{this.renderField()}
					</div>
				</div>				
				<div className="caption-full">		
					<div className="d-flex direction-rev space-between">			
						<h4 className="pull-right">${phone.price}</h4>
						<h4>{phone.name}</h4>												
					</div>
					<p>{phone.description}</p>
				</div>
			</div>
		);
	}

	renderSidebar(){
		const {phone, addPhoneToBasket} = this.props;
		
		return (
			<div className="sidebar-container"> 
				<p className='lead'>Quick shop</p>
				<BasketCart/>
				<div className="form-group">
					<h1>{phone.name}</h1>
					<h2>${phone.price}</h2>
				</div>
				<Link to = "/" className = "btn btn-info btn-block">
					Back to store
				</Link>
				<button
					type="button"
					className = 'btn btn-success btn-block'
					onClick = {() => addPhoneToBasket(phone.id)}
				>
					Add to cart
				</button>
			</div>
		);
	}

	render(){
		return(
			<div className="view-container">
				<div className="container">
					<div className="row">
						<div className="col-9">
							{this.props.phone && this.renderContent()}
						</div>
						<div className="col-3">
							{this.props.phone && this.renderSidebar()}
						</div>
					</div>
				</div>
			</div>
		)
	}
}

const mapStateToProps = state => {
	return {
		phone : getPhoneById(state, state.phonePage.id)
	}
}

const mapDispatchToProps = {
	fetchPhoneById,
	addPhoneToBasket
}

export default connect(mapStateToProps, mapDispatchToProps) (Phone);

